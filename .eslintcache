[{"C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\index.js":"1","C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\App.js":"2","C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\reportWebVitals.js":"3","C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\data.js":"4","C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\Question.js":"5","C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\Answers.js":"6","C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\Alert.js":"7","C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\Levels.js":"8","C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\context\\GlobalState.js":"9","C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\context\\AppReducer.js":"10"},{"size":639,"mtime":1612205614984,"results":"11","hashOfConfig":"12"},{"size":2922,"mtime":1612207356261,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":4648,"mtime":1610718139708,"results":"15","hashOfConfig":"12"},{"size":780,"mtime":1612207612615,"results":"16","hashOfConfig":"12"},{"size":845,"mtime":1612210972332,"results":"17","hashOfConfig":"12"},{"size":151,"mtime":1609263070484,"results":"18","hashOfConfig":"12"},{"size":1769,"mtime":1612208843321,"results":"19","hashOfConfig":"12"},{"size":6610,"mtime":1612205993702,"results":"20","hashOfConfig":"12"},{"size":141,"mtime":1611246262134,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1eu41a3",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\index.js",[],["47","48"],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\App.js",["49"],"import React from \"react\";\nimport \"./index.css\";\n\nimport Question from \"./Question\";\nimport Answers from \"./Answers\";\nimport Alert from \"./Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Row from \"react-bootstrap/Row\";\nimport Levels from \"./Levels\";\nimport { useGlobalContext } from \"./context/GlobalState\";\nfunction App() {\n  const {\n    score,\n    showScore,\n    quizz,\n    start,\n    handleTryAgain,\n    handleStart,\n  } = useGlobalContext();\n  // const { Questionnaire } = useContext(GlobalContext);\n  // const [quizz, setQuizz] = useState(Questionnaire);\n\n  // const [start, setStart] = useState(true);\n\n  // const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  // const [showScore, setShowScore] = useState(false);\n\n  // const [score, setScore] = useState(0);\n\n  // const [alert, setAlert] = useState({\n  //   show: false,\n  //   msg: \"\",\n  //   type: \"\",\n  // });\n  // const filterQuizz = (difficulties) => {\n  //   const newQuizz = Questionnaire.filter(\n  //     (datas) => datas.difficulties === difficulties\n  //   );\n  //   setQuizz(newQuizz);\n  //   setStart(false);\n  // };\n  // const handleAnswerClick = (isCorrect) => {\n  //   if (isCorrect) {\n  //     setScore(score + 1);\n  //   }\n  //   const nextQuestion = currentQuestion + 1;\n  //   if (nextQuestion < quizz.length) {\n  //     setCurrentQuestion(nextQuestion);\n  //   } else {\n  //     setShowScore(true);\n  //   }\n  // };\n\n  // const handleTryAgain = () => {\n  //   setShowScore(false);\n  //   setCurrentQuestion(0);\n  //   setScore(0);\n  // };\n\n  // const showAlert = (show = false, type = \"\", msg = \"\") => {\n  //   setAlert({ show, type, msg });\n  // };\n\n  // const handleStart = () => {\n  //   setStart(true);\n  //   handleTryAgain();\n  // };\n\n  return (\n    <div className=\"App\">\n      {start ? (\n        <Levels />\n      ) : showScore ? (\n        <Container className=\"p-3 d-flex align-items-center min-vh-100\">\n          <Jumbotron className=\"score text-center mx-auto\">\n            <h1 className=\"header mb-5 display-1\">\n              Your Score <br></br>\n              {score}/{quizz.length}\n            </h1>\n            {/* {alert.show && <Alert {...alert} />} */}\n\n            <Button variant=\"secondary\" size=\"lg\" onClick={handleStart}>\n              Try another Level\n            </Button>\n            <Button\n              className=\"btn-brown\"\n              size=\"lg m-2\"\n              onClick={handleTryAgain}\n            >\n              Try again\n            </Button>\n          </Jumbotron>\n        </Container>\n      ) : (\n        <>\n          <Container>\n            <Row>\n              <div className=\"col-md-8 offset-md-2\">\n                <Question />\n\n                <Answers />\n              </div>\n            </Row>\n          </Container>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\reportWebVitals.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\data.js",[],["50","51"],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\Question.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\Answers.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\Alert.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\Levels.js",["52"],"import React, { useState } from \"react\";\r\nimport { useGlobalContext } from \"./context/GlobalState\";\r\nimport Button from \"react-bootstrap/Button\";\r\nconst Levels = () => {\r\n  const { quizz, filterQuizz } = useGlobalContext();\r\n  const allLevels = [...new Set(quizz.map((datas) => datas.difficulties))];\r\n  const [levels, setLevels] = useState(allLevels);\r\n  return (\r\n    <section className=\"full\">\r\n      <div className=\"box container text-center\">\r\n        <small className=\"text-dark font-weight-bold\">Quizz</small>\r\n        <h1 className=\"mt-2\">\r\n          <span className=\"text-brown display-4 font-weight-bold\"> The</span>{\" \"}\r\n          <br />\r\n          <span className=\"text-dark display-2 font-weight-bold\">\r\n            {\" \"}\r\n            Lord\r\n          </span>{\" \"}\r\n          <br />\r\n          <span className=\"text-brown display-4 font-weight-bold\">\r\n            of The\r\n          </span>{\" \"}\r\n          <br />\r\n          <span className=\"text-dark display-2 font-weight-bold\">\r\n            {\" \"}\r\n            Rings\r\n          </span>{\" \"}\r\n          <br />\r\n        </h1>\r\n        <img\r\n          src=\"https://icon-library.com/images/lord-of-the-rings-icon/lord-of-the-rings-icon-19.jpg\"\r\n          width=\"100\"\r\n          alt=\"ring\"\r\n          className=\"img-fluid mt-1\"\r\n        />\r\n        <h3 className=\"mt-4 mb-3\">Select a level to Start The Quizz</h3>\r\n        {levels.map((level, index) => {\r\n          return (\r\n            <Button\r\n              size=\"lg\"\r\n              className=\"btn-level btn btn-secondary m-1\"\r\n              key={index}\r\n              onClick={() => filterQuizz(level)}\r\n            >\r\n              {level}\r\n            </Button>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default Levels;\r\n","C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\context\\GlobalState.js",[],"C:\\Users\\sma\\Documents\\Projets\\reactjs\\quizz\\src\\context\\AppReducer.js",[],["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":13},{"ruleId":"55","replacedBy":"63"},{"ruleId":"57","replacedBy":"64"},{"ruleId":"59","severity":1,"message":"65","line":7,"column":18,"nodeType":"61","messageId":"62","endLine":7,"endColumn":27},{"ruleId":"55","replacedBy":"66"},{"ruleId":"57","replacedBy":"67"},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar",["68"],["69"],"'setLevels' is assigned a value but never used.",["68"],["69"],"no-global-assign","no-unsafe-negation"]